<?php
/**
 * @file
 */

/**
 * Implements hook_install().
 */
function stanford_search_api_db_install() {
}

/**
 * Implements hook_enable().
 */
function stanford_search_api_db_enable() {

  $anon = user_role_load_by_name("anonymous user");
  $auth = user_role_load_by_name("authenticated user");
  $perm = "use search_api_autocomplete for search_api_views_search_db_nodes";

  // We cannot use this api function as the permission does not
  // yet exist due to cache and hooks.
  // user_role_grant_permissions($anon->rid, $perms);
  // user_role_grant_permissions($auth->rid, $perms);

  // Add anonymous users.
  db_merge('role_permission')->key(array(
    'rid' => $anon->rid,
    'permission' => $perm,
  ))->fields(array(
    'module' => "search_api_autocomplete",
  ))->execute();

  // Add authenticated users.
  db_merge('role_permission')->key(array(
    'rid' => $auth->rid,
    'permission' => $perm,
  ))->fields(array(
    'module' => "search_api_autocomplete",
  ))->execute();


}

/**
 * Implements hook_disable().
 */
function stanford_search_api_db_disable() {
}

/**
 * Implements hook_uninstall().
 */
function stanford_search_api_db_uninstall() {
}

/**
 * Implements hook_requirements().
 */
function stanford_search_api_db_requirements($phase) {
  $requirements = array();

  // Ensure translations don't break at install time.
  $t = get_t();

  // Check if the solr module is enabled to ensure no conflicts.
  if ($phase == "install") {
    if (module_exists("stanford_search_api_solr")) {
      $requirements['stanford_search_api_db'] = array(
        'title' => $t("Stanford Search API conflicting module"),
        'description' => $t('The Stanford Search API SOLR module is enabled. Please disable before trying to enable the Stanford Search API DB module'),
        'severity' => REQUIREMENT_ERROR,
        'value' => $t('stanford_search_api_solr'),
      );
    }
  }

  return $requirements;
}

